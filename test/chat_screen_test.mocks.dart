// Mocks generated by Mockito 5.4.4 from annotations
// in character_ai_clone/test/chat_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i6;

import 'package:character_ai_clone/models/chat_message_model.dart' as _i7;
import 'package:character_ai_clone/models/message_type.dart' as _i5;
import 'package:character_ai_clone/services/chat_storage_service.dart' as _i3;
import 'package:character_ai_clone/services/claude_service.dart' as _i8;
import 'package:isar/isar.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIsar_0 extends _i1.SmartFake implements _i2.Isar {
  _FakeIsar_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChatStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatStorageService extends _i1.Mock
    implements _i3.ChatStorageService {
  MockChatStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Isar> get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _i4.Future<_i2.Isar>.value(_FakeIsar_0(
          this,
          Invocation.getter(#db),
        )),
      ) as _i4.Future<_i2.Isar>);

  @override
  set db(_i4.Future<_i2.Isar>? _db) => super.noSuchMethod(
        Invocation.setter(
          #db,
          _db,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i2.Isar> openDB() => (super.noSuchMethod(
        Invocation.method(
          #openDB,
          [],
        ),
        returnValue: _i4.Future<_i2.Isar>.value(_FakeIsar_0(
          this,
          Invocation.method(
            #openDB,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Isar>);

  @override
  _i4.Future<void> saveMessage({
    required String? text,
    required bool? isUser,
    required _i5.MessageType? type,
    _i6.Uint8List? mediaData,
    String? mediaPath,
    Duration? duration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessage,
          [],
          {
            #text: text,
            #isUser: isUser,
            #type: type,
            #mediaData: mediaData,
            #mediaPath: mediaPath,
            #duration: duration,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i7.ChatMessageModel>> getMessages({
    int? limit,
    DateTime? before,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessages,
          [],
          {
            #limit: limit,
            #before: before,
          },
        ),
        returnValue: _i4.Future<List<_i7.ChatMessageModel>>.value(
            <_i7.ChatMessageModel>[]),
      ) as _i4.Future<List<_i7.ChatMessageModel>>);

  @override
  _i4.Future<void> deleteMessage(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> editMessage(
    int? id,
    String? newText,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editMessage,
          [
            id,
            newText,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAllMessages() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllMessages,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i7.ChatMessageModel>> searchMessages(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMessages,
          [query],
        ),
        returnValue: _i4.Future<List<_i7.ChatMessageModel>>.value(
            <_i7.ChatMessageModel>[]),
      ) as _i4.Future<List<_i7.ChatMessageModel>>);

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [ClaudeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockClaudeService extends _i1.Mock implements _i8.ClaudeService {
  MockClaudeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> sendMessage(String? message) => (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [message],
        ),
        returnValue: _i4.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #sendMessage,
            [message],
          ),
        )),
      ) as _i4.Future<String>);
}
